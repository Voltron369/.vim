*gerard.txt*    Documentation for Gerard's vimrc

==============================================================================
CUSTOM BINDINGS                                                       *gerard*

<Leader> is <Space>

⎵ ?       This Help
⎵ u       Toggle Undo Tree

Tabs and Windows:~
⎵ ⎵       update (write)
⎵ c       close tab and go to previous tab
gq        close window.  If last, close tab and go to previous tab
PgDown    next tab
PgUp      prev tab
["x]⎵t    mark tab in register x (use @x to go to tab)
+ or \    open Git |fugitive|
⎵ z       zoom window

Find:~
Ctrl-/                Search in File    |:BLines|
q:                    fzf commands      |q:| or |c_CTRL-F|
q/                    fzf search        |q/|| or |c_CTRL-F|
q?                    fzf help          |:Helptags|
⎵ b                   Buffers           |:Buffers|
⎵ f                   Open Git Files    |:GFiles|
⎵ F                   Open Files        |:Files|
⎵ gg                  fzf git grep
:GG[rep]              fzf git grep

FZF:~
Ctrl-b                Page Up
Ctrl-d                Page Down Half
Ctrl-f                Page Down
Ctrl-t                Open in Tab
Ctrl-u                Page Up Half
Ctrl-v                Open in vertical split
Ctrl-x                Open in split
Ctrl-y                Yank filename(s) to register * (clipboard)

                                                                      *gitlog*
Git Log:~
⎵ gc    fzf git log                    |:Commits|
⎵ gb    fzf git log %                  |:BCommits|
⎵ gl    git log in quickfix
⎵ gn    git log in quickfix (filenames only)
⎵ ml    git log vs merge-base
⎵ mn    git log vs merge-base (filenames only)
⎵ ms    git log vs merge-base (status only)

                                                                     *gitdiff*
Git Diff:~
              working vs HEAD~
⎵ gF    git status (see |fugitive-staging-maps|)
⎵ gf    git diff <cfile> working vs HEAD
⎵ gd    git diff current file working vs HEAD
⎵ gD    git diff all files working vs HEAD

            working vs merge-base~
⎵ mF    git diff names-only working vs merge-base
⎵ mf    git diff <cfile> working vs merge-base
⎵ md    git diff current file working vs merge-base
⎵ mD    git diff all files working vs merge-base

              HEAD vs merge-base (PR)~
⎵ pF    git diff names-only HEAD vs merge-base
⎵ pf    git diff <cfile> HEAD vs merge-base
⎵ pd    git diff current file HEAD vs merge-base
⎵ pD    git diff all files HEAD vs merge-base

            staged vs head~
⎵ sF    git diff names-only staged vs HEAD
⎵ sf    git diff <cfile> staged vs HEAD
⎵ sd    git diff current file staged vs HEAD
⎵ sD    git diff all files staged vs HEAD

                                                                   *gerardale*
ALE: (see |ale|)~
gd      |ALEGoToDefinition| or default |gd|
⎵ ad    |ALEGoToDefinition|
⎵ ai    |ALEGoToImplementation|
⎵ ar    |ALEFindReferences|
⎵ ah    |ALEHover|
⎵ an    |ALENextWrap|
⎵ ap    |ALEPreviousWrap|
⎵ aq    |ALEPopulateQuickfix|
[R      |ALEFirst|
[r      |ALEPreviousWrap|
]r      |ALENextWrap|
]R      |ALELast|

                                                                 *gerardmerge*
Merge:~
:Merge      Show files with merge conflicts in new split
<C-W><C-F>  Open file under cursor in new vertical split (and go to first merge conflict)
]n          Next merge conflict (|unimpaired|, |]n|)
[n          Previous merge conflict (|unimpaired|, |[n|)

Sensible:~
-             |:Explore|
m<CR>         |:Make|
`<Space>      |:Dispatch|
%             Uses |matchit|
j             Delete comment character when joining commented lines.
Ctrl-L        Also clears search highlighting (|:noh|) and calls |:diffupdate|
:DiffOrig     Diff vs saved version of file (|:DiffOrig|)
:Man {page}   Show man page in new split (|:Man})
:PlugStatus   See plugins in use

text-object:~
ic/ac/ih/ah   hunk                                           |gitgutter-ic|

colorscheme:~
gerard        dark
morning       bright
    
vim:tw=78:ts=8:ft=help:norl:
